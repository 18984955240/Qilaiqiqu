apply plugin: 'com.android.application'

android {
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.qizhi.qilaiqiqu"
        minSdkVersion 14
        targetSdkVersion 23
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

//    tasks.withType(Compile) {
//        options.encoding = "UTF-8"
//    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    sourceSets {
        main{
//            jniLibs.srcDir

            jniLibs.srcDirs=['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }

    repositories {
        mavenCentral()
    }
}


dependencies {
    //    compile project(':slidelibrary')
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // GIF
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.1.+'
    //    // GalleryFinal
    //    compile 'cn.finalteam:galleryfinal:1.4.8.7'
    //    //rxgalleryfinal依赖appcompat-v7和recyclerview-v7扩展卡库
    //    compile 'com.android.support:recyclerview-v7:23.2.0'
    //    compile 'com.android.support:appcompat-v7:23.2.0'
    //
    //    // RxGalleryFinal
    //    compile 'cn.finalteam.rxgalleryfinal:library:0.0.3'

    // Gson
    compile 'com.google.code.gson:gson:2.2.3'
    // 注入式
    compile 'com.jakewharton:butterknife:6.1.0'
    // 标签
    compile 'com.zhy:flowlayout-lib:1.0.3'
    //    compile 'com.wingjay:blurimageviewlib:1.1.0'
    compile 'com.android.support:support-v4:23.4.0'
    // 七牛
    compile 'com.qiniu:qiniu-android-sdk:7.2.+'
    // 浮动阻尼ListView
    compile 'com.github.frank-zhu:pullzoomview:1.0.0'
    //    compile 'com.squareup:android-times-square:1.6.5@aar'
    // RecyclerView头部View
    compile 'com.kevin:wraprecyclerview:1.0.6'
    // 图片裁剪
    compile 'com.soundcloud.android:android-crop:1.0.1@aar'
    // XUtils3
    compile 'org.xutils:xutils:3.3.36'

    // LeakCanary 内存泄漏检测
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

}
